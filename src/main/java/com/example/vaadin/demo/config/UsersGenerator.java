package com.example.vaadin.demo.config;

import com.example.vaadin.demo.domain.model.UserAccount;
import com.example.vaadin.demo.repository.UserRepository;
import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import lombok.extern.slf4j.Slf4j;
import lombok.val;
import org.apache.catalina.User;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.context.annotation.Configuration;

import java.util.Random;

@Slf4j
@Configuration
@RequiredArgsConstructor
@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public class UsersGenerator implements InitializingBean {

    UserRepository repository;

    @Override
    public void afterPropertiesSet() throws Exception {
        val usersIterator = repository.findAll()
                .iterator();
        if (usersIterator.hasNext()) {
            log.info("Already have some users!");
            return;
        }

        log.info("Have no users. Start generating");

        val random = new Random();

        for (var i = 0; i < random.nextInt(100) + 100; i++) {
            val user = new UserAccount(i, "autogenerated#" + i, "", "", "");
            repository.save(user);
        }

        log.info("Save {} users", repository.count());
    }
}
